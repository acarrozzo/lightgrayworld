generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id                        String          @id @default(cuid())
  username                  String          @unique
  email                     String?
  password                  String
  createdAt                 DateTime        @default(now())
  updatedAt                 DateTime        @updatedAt
  characterClass            String          @default("Scout")
  characterRace             String          @default("Human")
  currentRoom               String          @default("001")
  recallRoom                String          @default("001")
  lastActive                DateTime        @default(now())
  isActive                  Boolean         @default(true)
  clicks                    Int             @default(0)
  deaths                    Int             @default(0)
  level                     Int             @default(0)
  xp                        Int             @default(0)
  cp                        Int             @default(0)
  tp                        Int             @default(0)
  sp                        Int             @default(0)
  currency                  Int             @default(7)
  str                       Int             @default(0)
  dex                       Int             @default(0)
  mag                       Int             @default(0)
  def                       Int             @default(0)
  strMod                    Int             @default(0)
  dexMod                    Int             @default(0)
  magMod                    Int             @default(0)
  defMod                    Int             @default(0)
  physicalTraining          Int             @default(0)
  mentalTraining            Int             @default(0)
  oneHanded                 Int             @default(0)
  twoHanded                 Int             @default(0)
  ranged                    Int             @default(0)
  warcraft                  Int             @default(0)
  toughness                 Int             @default(0)
  block                     Int             @default(0)
  dodge                     Int             @default(0)
  slice                     Int             @default(0)
  smash                     Int             @default(0)
  aim                       Int             @default(0)
  magicStrike               Int             @default(0)
  multiArrow                Int             @default(0)
  boltUpgrade               Int             @default(0)
  throwDagger               Int             @default(0)
  crafting                  Int             @default(0)
  magicMissile              Int             @default(0)
  fireball                  Int             @default(0)
  poisonDart                Int             @default(0)
  magicArrow                Int             @default(0)
  atomicBlast               Int             @default(0)
  meteor                    Int             @default(0)
  heal                      Int             @default(0)
  regenerate                Int             @default(0)
  antidote                  Int             @default(0)
  unlock                    Int             @default(0)
  ironSkin                  Int             @default(0)
  magicArmor                Int             @default(0)
  wings                     Int             @default(0)
  gills                     Int             @default(0)
  hp                        Int             @default(10)
  hpMax                     Int             @default(10)
  mp                        Int             @default(2)
  mpMax                     Int             @default(2)
  inFight                   Boolean         @default(false)
  endFight                  Boolean         @default(false)
  weaponType                Int             @default(0)
  uIcon                     String          @default("char-commander")
  uIconWeapon               String          @default("fists")
  eIcon                     String          @default("question")
  chest1                    Boolean         @default(false)
  chest2                    Boolean         @default(false)
  chest3                    Boolean         @default(false)
  chest4                    Boolean         @default(false)
  chest5                    Boolean         @default(false)
  chest6                    Boolean         @default(false)
  chest7                    Boolean         @default(false)
  chest8                    Boolean         @default(false)
  chest9                    Boolean         @default(false)
  chest10                   Boolean         @default(false)
  roomZeroMap               Boolean         @default(false)
  grassyFieldMap            Boolean         @default(false)
  grassyFieldUndergroundMap Boolean         @default(false)
  forestMap                 Boolean         @default(false)
  forestUndergroundMap      Boolean         @default(false)
  redTownMap                Boolean         @default(false)
  redTownSewersMap          Boolean         @default(false)
  rockyFlatsMap             Boolean         @default(false)
  neverEndingMineMap        Boolean         @default(false)
  oceanMap                  Boolean         @default(false)
  darkForestMap             Boolean         @default(false)
  worldMapV1                Boolean         @default(false)
  worldMapV2                Boolean         @default(false)
  worldMapV3                Boolean         @default(false)
  worldMapV4                Boolean         @default(false)
  worldMapV5                Boolean         @default(false)
  worldMapFull              Boolean         @default(false)
  pajamaShamanFlag          Boolean         @default(false)
  youngSoldierFlag          Boolean         @default(false)
  jackLumberFlag            Boolean         @default(false)
  hunterBillFlag            Boolean         @default(false)
  travelingWarriorFlag      Boolean         @default(false)
  travelingWizardFlag       Boolean         @default(false)
  warriorSkillFlag          Boolean         @default(false)
  wizardSkillFlag           Boolean         @default(false)
  miningSkillFlag           Boolean         @default(false)
  rangerSkillFlag           Boolean         @default(false)
  masterTrainerFlag         Boolean         @default(false)
  starCitySkillsFlag        Boolean         @default(false)
  starCitySpellsFlag        Boolean         @default(false)
  dailyChestLast            Int             @default(0)
  dailyChestNextAvailable   Int             @default(0)
  dailyChestCount           Int             @default(0)
  accounts                  Account[]
  actionHistory             ActionHistory[]
  chatMessages              ChatMessage[]
  equipment                 Equipment?
  inventory                 InventoryItem[]
  killList                  KillList[]
  quests                    QuestProgress[]
  sessions                  Session[]
  room                      Room            @relation("RoomPlayers", fields: [currentRoom], references: [roomId])
}

model Equipment {
  id        String @id @default(cuid())
  userId    String @unique
  rightHand String @default("fists")
  leftHand  String @default("- - -")
  head      String @default("- - -")
  body      String @default("- - -")
  hands     String @default("- - -")
  feet      String @default("- - -")
  ring1     String @default("- - -")
  ring2     String @default("- - -")
  neck      String @default("- - -")
  artifact  String @default("- - -")
  tech      String @default("- - -")
  companion String @default("- - -")
  pet       String @default("- - -")
  mount     String @default("- - -")
  robot     String @default("- - -")
  aura      String @default("- - -")
  arrows    Int    @default(0)
  bolts     Int    @default(0)
  user      User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model InventoryItem {
  id       String @id @default(cuid())
  userId   String
  itemName String
  quantity Int    @default(1)
  user     User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, itemName])
}

model KillList {
  id      String @id @default(cuid())
  userId  String
  monster String
  kills   Int    @default(0)
  user    User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, monster])
}

model QuestProgress {
  id        String  @id @default(cuid())
  userId    String
  questId   String
  progress  Int     @default(0)
  completed Boolean @default(false)
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, questId])
}

model Room {
  id               String     @id @default(cuid())
  roomId           String     @unique
  name             String
  description      String
  lookDesc         String?
  dangerLevel      Int        @default(0)
  isSafe           Boolean    @default(true)
  north            String?
  northeast        String?
  east             String?
  southeast        String?
  south            String?
  southwest        String?
  west             String?
  northwest        String?
  up               String?
  down             String?
  hasFire          Boolean    @default(false)
  hasCraftingTable Boolean    @default(false)
  npcs             NPC[]
  items            RoomItem[]
  players          User[]     @relation("RoomPlayers")
}

model RoomItem {
  id       String  @id @default(cuid())
  roomId   String
  itemName String
  quantity Int     @default(1)
  isHidden Boolean @default(false)
  room     Room    @relation(fields: [roomId], references: [id], onDelete: Cascade)
}

model NPC {
  id          String @id @default(cuid())
  roomId      String
  name        String
  description String
  type        String
  room        Room   @relation(fields: [roomId], references: [id], onDelete: Cascade)
}

model ChatMessage {
  id        String   @id @default(cuid())
  userId    String
  message   String
  timestamp DateTime @default(now())
  roomId    String?
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model ActionHistory {
  id        String   @id @default(cuid())
  userId    String
  action    String
  message   String
  timestamp DateTime @default(now())
  roomId    String?
  metadata  String?
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId, timestamp])
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
